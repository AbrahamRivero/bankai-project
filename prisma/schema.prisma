generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model cart_items {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cart_id        String         @db.Uuid
  product_id     String         @db.Uuid
  quantity       Int
  shopping_carts shopping_carts @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products       products       @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  description String?
  image_url   String?
  products    products[]
}

model events {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  description String?
  date        DateTime @db.Timestamptz(6)
  location    String?
  cover_value Decimal? @db.Decimal(10, 2)
}

model order_items {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id   String   @db.Uuid
  product_id String   @db.Uuid
  quantity   Int
  price      Decimal  @db.Decimal(10, 2)
  orders     orders   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String
  total_amount     Decimal       @db.Decimal(10, 2)
  status           String
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  shipping_address String?
  order_items      order_items[]
  users            users         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments         payments[]
}

model payments {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id       String    @db.Uuid
  amount         Decimal   @db.Decimal(10, 2)
  payment_method String
  payment_date   DateTime? @default(now()) @db.Timestamptz(6)
  orders         orders    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model product_reviews {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String    @db.Uuid
  user_id    String
  rating     Int
  comment    String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  products   products  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id                  String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  description         String?
  price               Decimal           @db.Decimal(10, 2)
  stock               Int
  created_at          DateTime?         @default(now()) @db.Timestamptz(6)
  category_id         String?           @db.Uuid
  discount_percentage Decimal?          @db.Decimal(5, 2)
  cart_items          cart_items[]
  order_items         order_items[]
  product_images      product_images[]
  product_reviews     product_reviews[]
  categories          categories?       @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model shopping_carts {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String
  created_at DateTime?    @default(now()) @db.Timestamptz(6)
  cart_items cart_items[]
  users      users        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              String            @id
  name            String
  email           String            @unique
  password        String
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  address         String?
  phone_number    String?
  orders          orders[]
  product_reviews product_reviews[]
  shopping_carts  shopping_carts[]
}

model product_images {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String   @db.Uuid
  image_url  String
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
